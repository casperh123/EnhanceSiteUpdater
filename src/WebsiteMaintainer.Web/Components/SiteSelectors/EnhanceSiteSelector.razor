@using Enhance.Client
@using WebsiteMaintainer.Core.Entities
@using WebsiteMaintainer.Infrastructure.Services
@using Microsoft.AspNetCore.Authorization
@using WebsiteMaintainer.Web.Components.Cards
@inject IEnhanceService EnhanceService

@attribute [Authorize]

@if (Showing)
{
    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" >
        @if (!_enhanceWebsites.Any())
        {
            <p>No websites found.</p>
        }
        @foreach (Website website in _filteredWebsites)
        {
            <PreviewCard Website="@website" WebsiteAdded="@AddWebsite"/>
        }
    </RadzenStack>
}

@code {
    [Parameter] 
    public ApplicationUser User { get; set; }

    [Parameter] 
    public List<Website> ExistingWebsites { get; set; }
    
    [Parameter]
    public bool Showing { get; set; }

    [Parameter] 
    public EventCallback<Website> WebsiteAdded { get; set; }

    private List<Website> _enhanceWebsites = [];
    private List<Website> _filteredWebsites = [];
    
    private EnhanceClient _client;

    protected override async Task OnInitializedAsync()
    {
        _enhanceWebsites = await EnhanceService.GetWebsites(User);
    }

    protected override void OnParametersSet()
    {
        FilterWebsites();
    }

    public async Task AddWebsite(Website website)
    {
        await WebsiteAdded.InvokeAsync(website);
    }

    private void FilterWebsites()
    {
        _filteredWebsites = _enhanceWebsites
            .Where(website => !ExistingWebsites.Contains(website))
            .ToList();
    }

}