@using Enhance.Client.Models
@using EnhanceSiteUpdaer.Web.Components.Badge
@using EnhanceSiteUpdater.Core.Entities
@using EnhanceSiteUpdater.Core.Repository
@using EnhanceSiteUpdater.Infrastructure.EntityHelpers
@inject IWebsiteRepository WebsiteRepository

<RadzenCard >
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
        <RadzenColumn>
            <RadzenText TextStyle="TextStyle.H4">
                @EnhanceWebsite.Domain.Domain
            </RadzenText>
            <EnhanceWebsiteKindBadge Kind="@EnhanceWebsite.Kind"/>
        </RadzenColumn>

        <RadzenStack>
            <RadzenText TextStyle="TextStyle.Body1">
                Maintenance Plan:
            </RadzenText>
            <RadzenDropDown @bind-Value="@_website.MaintenanceType" Data="_maintenanceTypes" Change="@MaintenanceChanged"></RadzenDropDown>
        </RadzenStack>
    </RadzenStack>
</RadzenCard>

@code {
    
    [Parameter]
    public Website EnhanceWebsite { get; set; }
    
    private UpdaterWebsite _website { get; set; }

    private List<MaintenanceType> _maintenanceTypes = Enum.GetValues<MaintenanceType>().ToList();
    
    protected override async Task OnInitializedAsync()
    {
        _website = await WebsiteRepository.Get(EnhanceWebsite.Domain.Domain) ?? 
                  new UpdaterWebsite(
                      EnhanceWebsite.Domain.Domain, 
                      KindConverter.FromEnhance(EnhanceWebsite.Kind ?? WebsiteKind.Normal), 
                      MaintenanceType.None
                  );
    }

    private async Task MaintenanceChanged()
    {
        await WebsiteRepository.AddOrUpdate(_website);
    }
}