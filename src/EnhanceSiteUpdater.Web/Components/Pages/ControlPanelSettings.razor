@page "/control-panel-settings"

@using System.Security.Claims
@using EnhanceSiteUpdater.Core.Entities
@using EnhanceSiteUpdater.Core.Repository
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<PageTitle>Control Panel Settings</PageTitle>

<h1>You are authenticated</h1>

<AuthorizeView>
    <RadzenStack Orientation="Orientation.Vertical">
        <RadzenFormField Text="Control Panel Url" Variant="Variant.Text">
            <RadzenTextBox bind-Value="@_controlPanelUrl"/>
        </RadzenFormField>
        <RadzenFormField Text="Organization Id" Variant="Variant.Text">
            <RadzenTextBox Name="" bind-Value="@_organizationId"/>
        </RadzenFormField>
        <RadzenFormField Text="Api Key" Variant="Variant.Text">
            <RadzenTextBox bind-Value="@_apiKey"/>
        </RadzenFormField>
    </RadzenStack>
    
    <RadzenButton Click="@SaveUserDetails" />
</AuthorizeView>

@code {

    [Inject] 
    public IUserRepository UserRepository { get; set; }
    
    private string _controlPanelUrl = string.Empty;
    private string _organizationId = string.Empty;
    private string _apiKey = string.Empty;

    private ApplicationUser? User;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipal claimsPrincipal = authenticationState.User;
        User = await UserManager.GetUserAsync(claimsPrincipal);

        if (SignInManager.IsSignedIn(claimsPrincipal))
        {
            _controlPanelUrl = User?.ControlPanelUrl?.ToString() ?? "";
            _organizationId = User?.OrganizationId?.ToString() ?? "";
            _apiKey = User?.ApiKey ?? "";
        }
    }

    public async Task SaveUserDetails()
    {
        User.ControlPanelUrl = new Uri(_controlPanelUrl);
        User.OrganizationId = Guid.Parse(_organizationId);
        User.ApiKey = _apiKey;

        await UserRepository.UpdateUser(User);
    }
}